{"version":3,"sources":["Services/userService.js","Services/workshopService.js","View/TodoView.js","View/index.js","Services/todoService.js","Services/index.js","Controller/UserController.js","Controller/WorkshopController.js","Controller/TodoController.js","Controller/index.js","Schema/index.js","app.js","index.js"],"names":["UserService","app","console","log","userService","WorkshopService","workshopService","TodoView","home","todos","todo_ids","html","todoView","tasknameToString","res","map","todo","taskname","slice","taskidToString","_id","TodoService","Todo","taskstatus","save","err","error","find","status","send","resp","success","data","taskid","remove","todoService","UserController","get","req","respon","login","WorkshopController","TodoController","params","getTodo","addTodo","completeTodo","Controller","set","TODO_SCHEMA","String","Boolean","express","require","mongoose","Promise","global","Schema","todoSchema","mongo_uri","db","initMongoose","createConnection","connect","useNewUrlParser","then","Error","catch","model","setTimeout","module","exports","port","listen"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["class UserService {\r\n  login = (app) => {\r\n    console.log(\"login service\")\r\n    return (\"login service\")\r\n  }\r\n}\r\nconst userService = new UserService();\r\n\r\nexport default userService;","class WorkshopService {\r\n  find = () => {\r\n    console.log(\"workshop find service\")\r\n    return (\"workshop find service\")\r\n  }\r\n}\r\nconst workshopService = new WorkshopService();\r\n\r\nexport default workshopService;","class TodoView {\r\n  home(todos,todo_ids) {\r\n    var html = `\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n      <title>Todo list</title>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n      <script >\r\n      function todoMap() {\r\n        console.log(\"${todos}\")\r\n        var todoList = ${todos};\r\n        var todos = document.querySelector('#todolist');\r\n        todos.innerHTML = '<ul style=\"width:40%;\">' + todoList.map(function (todo,index) {\r\n          console.log(${todo_ids}[index])\r\n          return '<li>' + todo  + '<button style=\"margin-left:8px;\" onclick=\"completeTask(todo)\">' + 'complete ' + todo +'</button>'+ '</li>';\r\n        }).join('') + '</ul>';  \r\n        window.onload = todoMap;\r\n        }\r\n      </script>\r\n      <script >\r\n      function myFunction() {\r\n        console.log(\"${todos}\");\r\n      }\r\n      </script>\r\n      <script >\r\n        function submit() {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState === 4) {\r\n                    alert(xhr.response);\r\n                }\r\n            }\r\n            xhr.open('get', 'http://localhost:8888/todo/add/'+document.getElementById(\"taskname\").value, true);\r\n            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n            xhr.send();\r\n        }\r\n    </script>\r\n    <script >\r\n        function completeTask(id) {\r\n            console.log(id)\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState === 4) {\r\n                    alert(xhr.response);\r\n                }\r\n            }\r\n            xhr.open('get', 'http://localhost:8888/todo/complete/'+id, true);\r\n            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n            xhr.send();\r\n        }\r\n    </script>\r\n    </head>\r\n    <body>\r\n      <h1>Todo list</h1>\r\n      <div id=\"todolist\" style=\"width:500px;border:1px solid black;border-radius:8px;min-height:16px;\"></div>\r\n      <div style=\"margin-top:16px;\">\r\n      <button type=\"button\"\r\n        onclick=\"submit()\">\r\n        Add todo.</button>\r\n      <input type=\"text\" id=\"taskname\" name=\"fname\"><br><br>\r\n      </div>\r\n      <button onclick=todoMap()>reload todo list</button>\r\n      <script >\r\n      // alert(\"asd\")\r\n      var todoList = ${todos};\r\n      console.log(todoList);\r\n      var todos = document.querySelector('#todolist');\r\n      todos.innerHTML = '<ul style=\"width:40%;\">' + todoList.map(function (todo,index) {\r\n        // var button = document.createElement('button');\r\n        // var param = ${todo_ids}[index];\r\n        // var button.setAttribute('onclick', 'completeTask( \" '+param+' \" )');\r\n        return '<li>' + todo  + '<button style=\"margin-left:8px;\" id='+${todo_ids}[index]+' onclick=completeTask(this.id)>' + 'complete ' + todo +'</button>'+ '</li>';\r\n      }).join('') + '</ul>';\r\n    </script>\r\n    </body>\r\n    </html>`;\r\n    return (html)\r\n  }\r\n}\r\nconst todoView = new TodoView();\r\n\r\nexport default todoView;","export { default as todoView } from \"./TodoView\";\r\nexport * from \"./TodoView\";\r\n\r\n","import { Todo } from '../app'\r\nimport { todoView } from '../View'\r\n\r\nconst tasknameToString = (todos) => {\r\n  let res = \"[\"\r\n  todos.map((todo)=>{\r\n    // console.log(todo.taskname,todo.taskstatus)\r\n    res = res+\"'\"+todo.taskname+\"'\"+','\r\n  })\r\n  return res.slice(0, -1)+\"]\"\r\n}\r\nconst taskidToString = (todos) => {\r\n  let res = \"[\"\r\n  todos.map((todo)=>{\r\n    console.log(todo._id)\r\n    res = res+\"'\"+todo._id+\"'\"+','\r\n  })\r\n  return res.slice(0, -1)+\"]\"\r\n}\r\n\r\nclass TodoService {\r\n  getTodo = (taskname) => {\r\n    console.log(\"get taskname : \",taskname)\r\n    const todo = new Todo({ taskname: 'activity7', taskstatus: true })\r\n    todo.save(function (err, todo) {\r\n      if (err) return console.error(err);\r\n      console.log(todo)\r\n      console.log(todo.taskname + \" saved to todo collection.\");\r\n    });\r\n    return (taskname)\r\n  }\r\n  find = (res) => {\r\n    Todo.find((err,todos)=>{\r\n      if (err) return res.status(500).send(err)\r\n      // console.log(\"todos\",todos)\r\n      // return res.status(200).send(todoView.home(\"['mylist']\"))\r\n      // console.log(parseToString(todos))\r\n      return res.status(200).send(todoView.home(tasknameToString(todos),taskidToString(todos)))\r\n    })\r\n  }\r\n  addTodo = (taskname,res) => {\r\n    const todo = new Todo({ taskname: taskname, taskstatus: false })\r\n    todo.save(function (err, todo) {\r\n      if (err) return console.error(err);\r\n      // console.log(todo)\r\n      let resp = {\r\n        success : true,\r\n        data : todo,\r\n      }\r\n      res.status(200).send(resp)\r\n      // this.find(res)\r\n    })\r\n  }\r\n\r\n  completeTodo = (taskid,res) => {\r\n    Todo.remove({_id:taskid},function (err) {\r\n      if (err) return console.error(err);\r\n      console.log(\"complted\",taskid)\r\n      res.status(200).send(`complted task`)\r\n    })\r\n  }\r\n}\r\nconst todoService = new TodoService();\r\n\r\nexport default todoService;","export { default as userService } from \"./userService\";\r\nexport * from \"./userService\";\r\n\r\nexport { default as workshopService } from \"./workshopService\";\r\nexport * from \"./workshopService\"\r\n\r\nexport { default as todoService } from \"./todoService\"\r\nexport * from \"./todoService\"","import { userService } from \"../Services/\"\r\n\r\nfunction UserController(app) {\r\n  app.get('/user/', (req, res) => {\r\n    res.status(200).send(\"user controller\");\r\n  });\r\n\r\n  app.get('/user/login', (req,res) => {\r\n    let respon = userService.login()\r\n    res.status(200).send(respon)\r\n  })\r\n}\r\nexport default UserController","import { workshopService } from '../Services'\r\n\r\nfunction WorkshopController(app) {\r\n  app.get('/workshop/', (req, res) => {\r\n    res.status(200).send(\"workshop controller2\");\r\n  });\r\n\r\n  app.get('/workshop/find',(req,res) => {\r\n    let respon = workshopService.find()\r\n    res.status(200).send(respon)\r\n  })\r\n}\r\nexport default WorkshopController","import { todoService } from \"../Services/\"\r\n\r\nfunction TodoController(app,Todo) {\r\n  app.get('/todo/', (req, res) => {\r\n    todoService.find(res)\r\n    // res.status(200).send(response);\r\n  });\r\n\r\n  app.get('/todo/update/:taskname', (req,res) => {\r\n    var taskname = req.params.taskname;\r\n    let respon = todoService.getTodo(taskname,Todo)\r\n    res.status(200).send(respon)\r\n  })\r\n\r\n  app.get('/todo/add/:taskname',(req,res)=>{\r\n    var taskname = req.params.taskname;\r\n    todoService.addTodo(taskname,res)\r\n    // console.log(response)\r\n    // return res.status(200).send(\"success\")\r\n  })\r\n\r\n  app.get('/todo/complete/:taskid',(req,res)=>{\r\n    var taskid = req.params.taskid;\r\n    todoService.completeTodo(taskid,res)\r\n    // console.log(response)\r\n    // return res.status(200).send(\"success\")\r\n  })\r\n}\r\nexport default TodoController","import UserController from './UserController'\r\nimport WorkshopController from './WorkshopController'\r\nimport TodoController from './TodoController'\r\n\r\nconst html = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <title>A JavaScript project</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n</head>\r\n<body>\r\n  <h1>A JavaScript project</h1>\r\n</body>\r\n</html>`;\r\n\r\nfunction Controller(app,Todo) {\r\n  console.log(\"app\")\r\n  app.get('/', (req, res) => {\r\n    res.set('Content-Type', 'text/html');\r\n    res.status(200).send(html);\r\n  });\r\n\r\n  UserController(app)\r\n  WorkshopController(app)\r\n  TodoController(app,Todo)\r\n}\r\n\r\nexport default Controller","export const TODO_SCHEMA = {\r\n  taskname: String,\r\n  taskstatus: Boolean,\r\n}","import Controller from './Controller'\r\nimport { TODO_SCHEMA } from './Schema'\r\nconst express = require('express');\r\nvar mongoose = require(\"mongoose\");\r\nmongoose.Promise = global.Promise;\r\nconst Schema = mongoose.Schema\r\nconst todoSchema = new Schema(TODO_SCHEMA)\r\nvar mongo_uri = \"mongodb://admin:secure@mongo:27017\";\r\nconsole.log(\"mongo_uri\",mongo_uri)\r\n\r\n\r\nexport var db\r\nexport var Todo \r\n\r\n\r\nconst initMongoose = (db) => {\r\n  db = mongoose.createConnection(mongo_uri)\r\n\r\n  mongoose.connect(mongo_uri, { useNewUrlParser: true }).then(\r\n    () => {\r\n      console.log(\"[success] task 2 : connected to the database \");\r\n    },\r\n    error => {\r\n      console.log(\"[failed] task 2 \" + error);\r\n      // process.exit();\r\n      throw new Error(\"ops\")\r\n    }\r\n  ).catch((err)=>{\r\n    console.log(err)\r\n  })\r\n\r\n  Todo = db.model('todo', todoSchema)\r\n  \r\n}\r\n\r\n\r\nsetTimeout(function(db){ \r\n  initMongoose(db,Todo)\r\n\r\n }, 10000);\r\n\r\n\r\n\r\nconsole.log(\"yaay\")\r\n\r\nconst app = express();\r\n\r\nController(app,Todo)\r\n\r\nmodule.exports = app;","const app = require('./app');\r\n\r\nconst port = '8888';\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});"]}